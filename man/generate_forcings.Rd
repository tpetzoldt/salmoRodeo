% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_forcings.R
\name{generate_forcings}
\alias{generate_forcings}
\title{Generate forcing function specifications for a model.}
\usage{
generate_forcings(datafile, columns)
}
\arguments{
\item{datafile}{The name of the data file that contains the forcing data.}

\item{columns}{A character vector specifying the names of the columns
in the \code{datafile} that correspond to the forcing functions. These
names will also be used as the function names.}
}
\value{
A data frame with columns \code{name}, \code{column}, \code{file}, \code{mode}, and
\code{default}, structured for \code{rodeo::forcingFunctions}.
}
\description{
This function creates a data frame suitable for defining forcing functions
in a \code{rodeo} model. It specifies the names of the forcing functions,
the corresponding column names in the input data file, and other metadata.
}
\examples{
# Assuming `rodeo::forcingFunctions` is available and correctly setup
# Example: Create a dummy data file
cat("stagnation\tVE\n",
    "1\t10\n",
    "2\t20\n",
    file = "input_data.tsv")

# Generate forcing function specifications
forcings_spec <- generate_forcings(
  datafile = "input_data.tsv",
  columns = c("stagnation", "VE")
)
print(forcings_spec)
# Note: The actual `forcingFunctions` call within the function
# will generate Fortran/C code based on this data frame.
# For this example, we just show the data frame output.

# Clean up dummy file
unlink("input_data.tsv")
}
