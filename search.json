[{"path":"https://tpetzoldt.github.io/salmoRodeo/articles/salmoRodeo.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Basic Usage of salmoRodeo","text":"SALMO (Simulation Analytical Lake Model, Benndorf 1979; Benndorf Recknagel 1982; Recknagel 1989) developed several authors, e.g. Petzoldt et al. (2005), Rolinski et al. (2005) Sachse et al. (2014) dynamic ecological model simulates essential pelagic food web compartments lakes reservoirs. state variables soluble reactive phosphorus, inorganic nitrogen, two three functional phytoplankton groups, zooplankton, oxygen detritus. important, e.g. predation fish sediment-water interactions, included empirical equations. years, several “monolithic” implementations forks appeared, common difficult maintain. version provided implemented Justus Möller part study project. aims make modificatins extensions easier emplying tabular description processes stoichiometry. code generator package (rodeo, Kneis, Petzoldt, Berendonk 2017; Kneis 2024) generate executable code. vignette demonstrates basic setup, execution, plotting functionalities salmoRodeo package. showcases initialize model, set parameters initial conditions, run simulations, visualize results.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/articles/salmoRodeo.html","id":"setup-and-model-compilation","dir":"Articles","previous_headings":"","what":"Setup and Model Compilation","title":"Basic Usage of salmoRodeo","text":"begin loading salmoRodeo package setting model. default, model_setup() uses input files package’s internal models directory. also specify local data file inputs bundled package:","code":"library(\"salmoRodeo\") library(\"deSolve\")  # Setup and compile model using default input files model <- model_setup() #model <- model_setup(datafile=\"inputs.tsv\")"},{"path":"https://tpetzoldt.github.io/salmoRodeo/articles/salmoRodeo.html","id":"setting-time-parameters-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Setting Time, Parameters, and Initial Conditions","title":"Basic Usage of salmoRodeo","text":"Next, define simulation time steps (e.g. 2 years), initial state variable values, custom parameter settings. Note due implementation state variable, xsum must sum x1 + x2 + x3.","code":"times <- seq(1, 730, 1)  # Set initial values for state variables model <- set_initval(model, c(p=50, n=3, x1=0.1, x2=0.1, x3=0.1, z=0.1, d=1, xsum=0.3))  # Apply default parameter values (or provide specific changes if needed) model <- set_pars(model)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/articles/salmoRodeo.html","id":"optional-cloning-and-altering-parameters-for-comparison","dir":"Articles","previous_headings":"","what":"Optional: Cloning and Altering Parameters for Comparison","title":"Basic Usage of salmoRodeo","text":"rodeo package allows clone model objects, useful comparing different parameter scenarios without re-compiling model scratch. ’ll create clone modify parameters. Remember set_pars() cumulative called multiple times objec.","code":"model2 <- model$clone() model2 <- set_pars(model2, c(npsfmode = 0, MOMIN = 0.03, MOT=0.012))  # Verify the altered parameters model2$getPars()[c(\"MOMIN\", \"MOT\")]"},{"path":"https://tpetzoldt.github.io/salmoRodeo/articles/salmoRodeo.html","id":"running-simulations","dir":"Articles","previous_headings":"","what":"Running Simulations","title":"Basic Usage of salmoRodeo","text":"Now, run dynamic simulations original cloned models using specified time steps solver settings.","code":"out <- model$dynamics(times = times, diagnostics = TRUE, atol = 1e-8,                       rtol = 1e-2, method = \"adams\", fortran = TRUE)  out2 <- model2$dynamics(times = times, diagnostics = TRUE, atol = 1e-8,                         rtol = 1e-2, method = \"adams\", fortran = TRUE)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/articles/salmoRodeo.html","id":"visualizing-results-and-diagnostics","dir":"Articles","previous_headings":"","what":"Visualizing Results and Diagnostics","title":"Basic Usage of salmoRodeo","text":"Finally, plot output simulations compare state variable trajectories run diagnostics check model’s performance.","code":"plot(out, out2, which=c(\"p\", \"n\", \"x1\", \"x2\", \"x3\", \"z\", \"d\", \"xsum\", \"pin\")) deSolve::diagnostics(out)"},{"path":[]},{"path":"https://tpetzoldt.github.io/salmoRodeo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Justus Möller. Author. Thomas Petzoldt. Author, maintainer.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Möller J, Petzoldt T (2025). salmoRodeo: 1-layer ecological lake model Petersen-Gujer matrix notation. R package version 0.2, https://tpetzoldt.github.io/salmoRodeo/.","code":"@Manual{,   title = {salmoRodeo: A 1-layer ecological lake model in Petersen-Gujer matrix notation},   author = {Justus Möller and Thomas Petzoldt},   year = {2025},   note = {R package version 0.2},   url = {https://tpetzoldt.github.io/salmoRodeo/}, }"},{"path":"https://tpetzoldt.github.io/salmoRodeo/index.html","id":"salmorodeo","dir":"","previous_headings":"","what":"A 1-layer ecological lake model in Petersen-Gujer matrix notation","title":"A 1-layer ecological lake model in Petersen-Gujer matrix notation","text":"Re-Implementation Classical SALMO Model Gujer-Petersen Matrix Notation current version implements single layer, useful shallow lakes. also serve starting point 1D version coupled hydrophysical driver work biogeochemical process descriptions. uses R package rodeo generate fast Fortran code, can solved initial value problem using deSolve package R. Status: work progress (alpha)","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/generate_forcings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate forcing function specifications for a model. — generate_forcings","title":"Generate forcing function specifications for a model. — generate_forcings","text":"function creates data frame suitable defining forcing functions rodeo model. specifies names forcing functions, corresponding column names input data file, metadata.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/generate_forcings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate forcing function specifications for a model. — generate_forcings","text":"","code":"generate_forcings(datafile, columns)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/generate_forcings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate forcing function specifications for a model. — generate_forcings","text":"datafile name data file contains forcing data. columns character vector specifying names columns datafile correspond forcing functions. names also used function names.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/generate_forcings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate forcing function specifications for a model. — generate_forcings","text":"data frame columns name, column, file, mode, default, structured rodeo::forcingFunctions.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/generate_forcings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate forcing function specifications for a model. — generate_forcings","text":"","code":"# Assuming `rodeo::forcingFunctions` is available and correctly setup # Example: Create a dummy data file cat(\"stagnation\\tVE\\n\",     \"1\\t10\\n\",     \"2\\t20\\n\",     file = \"input_data.tsv\")  # Generate forcing function specifications forcings_spec <- generate_forcings(   datafile = \"input_data.tsv\",   columns = c(\"stagnation\", \"VE\") ) print(forcings_spec) #> [1] \"! GENERATED CODE -- YOU PROBABLY DO NOT WANT TO EDIT THIS\\n\\ninclude '/home/runner/work/_temp/Library/rodeo/fortran/forcingsGenericMethods.f95'\\nmodule forcings\\nuse forcings_generic\\nimplicit none\\nprivate TSeries, readTS, interpol\\ncontains\\n\\n  function stagnation (time) result (res)\\n  double precision, intent(in):: time\\n  character(len=256), parameter:: file='input_data.tsv'\\n  character(len=256), parameter:: col='stagnation'\\n  integer, parameter:: lweight= -1\\n  logical, save:: firstCall= .TRUE.\\n  integer, save:: latest= 1\\n  type(TSeries), save:: x\\n  double precision, parameter:: NA= huge(0d0)\\n  character(len=512):: errmsg\\n  double precision:: res\\n  include '/home/runner/work/_temp/Library/rodeo/fortran/forcingsInclude.f95'\\nend function\\n  function VE (time) result (res)\\n  double precision, intent(in):: time\\n  character(len=256), parameter:: file='input_data.tsv'\\n  character(len=256), parameter:: col='VE'\\n  integer, parameter:: lweight= -1\\n  logical, save:: firstCall= .TRUE.\\n  integer, save:: latest= 1\\n  type(TSeries), save:: x\\n  double precision, parameter:: NA= huge(0d0)\\n  character(len=512):: errmsg\\n  double precision:: res\\n  include '/home/runner/work/_temp/Library/rodeo/fortran/forcingsInclude.f95'\\nend function\\nend module\" # Note: The actual `forcingFunctions` call within the function # will generate Fortran/C code based on this data frame. # For this example, we just show the data frame output.  # Clean up dummy file unlink(\"input_data.tsv\")"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/model_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up and compile a rodeo model. — model_setup","title":"Set up and compile a rodeo model. — model_setup","text":"function orchestrates setup rodeo model reading various definition files (variables, parameters, functions, processes, stoichiometry), applying replacements process expressions, generating forcing functions, finally compiling model.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/model_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up and compile a rodeo model. — model_setup","text":"","code":"model_setup(   base_path = NULL,   vars = \"vars.tsv\",   pars = \"pars.tsv\",   funs = \"funs.tsv\",   pros = \"pros.tsv\",   stoi = \"stoi.tsv\",   repl = \"replacements.tsv\",   datafile = paste0(system.file(\"models\", package = \"salmoRodeo\"), \"/inputs.tsv\"),   input_columns = c(\"stagnation\", \"VE\", \"ZMIX\", \"QIN\", \"IIN\", \"TE\", \"PIN\", \"NIN\",     \"POMIN\"),   sources = \"functions_extended.f95\",   phyto_groups = 3 )"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/model_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up and compile a rodeo model. — model_setup","text":"base_path Path model files. Can empty, vars, pars, funs, pros, soi repl contain full path file names. vars File name variables definition TSV file. pars File name parameters definition TSV file. funs File name functions definition TSV file. pros File name processes definition TSV file. stoi File name stoichiometry definition TSV file. repl File name replacements definition TSV file. datafile Path file name input data TSV file used forcings. input_columns character vector column names datafile used input forcings. sources File name additional Fortran source files compiled model (e.g., functions_extended.f95). phyto_groups integer (2 3) indicating number phytoplankton groups, affecting process replacement files read.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/model_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up and compile a rodeo model. — model_setup","text":"rodeo model object, compiled ready simulation.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/model_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up and compile a rodeo model. — model_setup","text":"","code":"if (FALSE) { # \\dontrun{ # This example requires dummy files and the 'rodeo' package # and is skipped in automatic checks. # Create dummy files dir.create(\"model_files\", showWarnings = FALSE) cat(\"name\\tmin\\tmax\\tunit\\tdescription\\n\",     \"N\\t0\\tInf\\tmmol/m3\\tNitrogen\\n\", file = \"model_files/vars.tsv\") cat(\"name\\tdefault\\tunit\\tdescription\\n\",     \"KN\\t0.1\\tmmol/m3\\tHalf-saturation constant for N\\n\", file = \"model_files/pars.tsv\") cat(\"name\\texpression\\n\",     \"f_N\\tN/(KN+N)\\n\", file = \"model_files/funs.tsv\") cat(\"name\\texpression\\ttwoPhytoGroups\\tthreePhytoGroups\\n\",     \"uptake\\tN*f_N\\tN*f_N_2\\tN*f_N_3\\n\", file = \"model_files/pros.tsv\") cat(\"process\\tN\\n\",     \"uptake\\t-1\\n\", file = \"model_files/stoi.tsv\") cat(\"pattern\\treplacement\\ttwoPhytoGroups\\tthreePhytoGroups\\n\",     \"N\\tNO3\\tN_two\\tN_three\\n\", file = \"model_files/replacements.tsv\") cat(\"stagnation\\tVE\\n\",     \"1\\t10\\n\",     \"2\\t20\\n\",     file = \"model_files/inputs.tsv\")  # Define a dummy function_extended.f95 (can be empty for this example) cat(\"SUBROUTINE dummy_ext()\\nEND SUBROUTINE\\n\", file = \"model_files/functions_extended.f95\")  # Run model setup model_obj <- model_setup(   vars = \"model_files/vars.tsv\",   pars = \"model_files/pars.tsv\",   funs = \"model_files/funs.tsv\",   pros = \"model_files/pros.tsv\",   stoi = \"model_files/stoi.tsv\",   repl = \"model_files/replacements.tsv\",   datafile = \"model_files/inputs.tsv\",   input_columns = c(\"stagnation\", \"VE\"),   sources = \"model_files/functions_extended.f95\",   phyto_groups = 3 )  # Check if model is compiled (it should be) print(model_obj$is_compiled())  # Clean up dummy files unlink(\"model_files\", recursive = TRUE) } # }"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/rd.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Tab-Separated Value (TSV) file into a data frame. — rd","title":"Read a Tab-Separated Value (TSV) file into a data frame. — rd","text":"wrapper around read.table specifically configured TSV files, headers, treating strings characters rather factors.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/rd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Tab-Separated Value (TSV) file into a data frame. — rd","text":"","code":"rd(f, ...)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/rd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Tab-Separated Value (TSV) file into a data frame. — rd","text":"f path TSV file. ... Additional arguments pass read.table.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/rd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Tab-Separated Value (TSV) file into a data frame. — rd","text":"data frame containing data TSV file.","code":""},{"path":[]},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/read_pros.html","id":null,"dir":"Reference","previous_headings":"","what":"Read process definitions for a model based on the number of phytoplankton groups. — read_pros","title":"Read process definitions for a model based on the number of phytoplankton groups. — read_pros","text":"function reads TSV file containing process definitions model. handles different column names based whether model uses 2 3 phytoplankton groups, specifically renaming columns 3-group case.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/read_pros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read process definitions for a model based on the number of phytoplankton groups. — read_pros","text":"","code":"read_pros(file, phyto_groups = 3)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/read_pros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read process definitions for a model based on the number of phytoplankton groups. — read_pros","text":"file path TSV file containing process definitions. phyto_groups integer, either 2 3, specifying number phytoplankton groups model version.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/read_pros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read process definitions for a model based on the number of phytoplankton groups. — read_pros","text":"data frame process definitions, column names adjusted according phyto_groups.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/read_replacements.html","id":null,"dir":"Reference","previous_headings":"","what":"Read replacement rules for a model based on the number of phytoplankton groups. — read_replacements","title":"Read replacement rules for a model based on the number of phytoplankton groups. — read_replacements","text":"function reads TSV file containing replacement rules model. handles different column names based whether model uses 2 3 phytoplankton groups, specifically renaming columns 3-group case.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/read_replacements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read replacement rules for a model based on the number of phytoplankton groups. — read_replacements","text":"","code":"read_replacements(file, phyto_groups = 3)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/read_replacements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read replacement rules for a model based on the number of phytoplankton groups. — read_replacements","text":"file path TSV file containing replacement rules. phyto_groups integer, either 2 3, specifying number phytoplankton groups model version.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/read_replacements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read replacement rules for a model based on the number of phytoplankton groups. — read_replacements","text":"data frame replacement rules, column names adjusted according phyto_groups.","code":""},{"path":[]},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_abbreviations.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply multiple string replacements to a data frame column. — replace_abbreviations","title":"Apply multiple string replacements to a data frame column. — replace_abbreviations","text":"function iteratively applies set pattern-replacement pairs 'expression' column data frame. performs multiple passes ensure replacements applied, even depend previous replacements. Patterns treated full words (preceded non-word characters followed non-word characters opening parenthesis) prevent partial word matches.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_abbreviations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply multiple string replacements to a data frame column. — replace_abbreviations","text":"","code":"replace_abbreviations(file, replacements, npass = 10)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_abbreviations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply multiple string replacements to a data frame column. — replace_abbreviations","text":"file data frame must contain column named expression. replacements data frame least two columns: pattern (strings found) replacement (strings replace ). npass number passes apply replacements. Multiple passes useful replacements can affect subsequent patterns.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_abbreviations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply multiple string replacements to a data frame column. — replace_abbreviations","text":"input data frame file expression column modified replacements.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values in a named vector while preserving order and other elements. — replace_values","title":"Replace values in a named vector while preserving order and other elements. — replace_values","text":"function takes source named vector (value) named vector replacements. replaces values value names match replacement, keeping values original order intact.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values in a named vector while preserving order and other elements. — replace_values","text":"","code":"replace_values(value, replacement)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values in a named vector while preserving order and other elements. — replace_values","text":"value named atomic vector (e.g., numeric, character, logical). vector whose values modified. Must names. replacement named atomic vector type value (coercible). names vector specify elements value replacement, values new values assigned. Must names.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace values in a named vector while preserving order and other elements. — replace_values","text":"named vector updated values. order names elements specified replacement remain unchanged value.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/replace_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace values in a named vector while preserving order and other elements. — replace_values","text":"","code":"# Example usage: value <- c(a=2, b=3, d=5, foo=66) replace <- c(foo=0, b=77)  new_value <- replace_values(value, replace) print(new_value) #>   a   b   d foo  #>   2  77   5   0  # Expected output: a=2, b=77, d=5, foo=0  # Example with some names in 'replacement' not present in 'value' value2 <- c(x=10, y=20) replacement2 <- c(y=50, z=100) # 'z' is not in src2 new_value2 <- replace_values(value2, replacement2) #> Warning: The following names in 'replacement' were not found in 'value' and were ignored: z print(new_value2) #>   x   y   z  #>  10  50 100  # Expected output: x=10, y=50, with a warning about 'z'  # Example with missing names in value or replacement (will throw an error) # tryCatch(replace_values(c(1,2), c(a=3)), error = function(e) message(e$message)) # tryCatch(replace_values(c(a=1, b=2), c(3,4)), error = function(e) message(e$message))"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/salmoRodeo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A 1-layer ecological lake model in Petersen-Gujer matrix notation — salmoRodeo-package","title":"A 1-layer ecological lake model in Petersen-Gujer matrix notation — salmoRodeo-package","text":"package implements 1-layer version ecological lake model SALMO using tabular Petersen-Gujer matrix description. simulates main components pelagic foodweb shallow, non-stratified lake.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/salmoRodeo-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A 1-layer ecological lake model in Petersen-Gujer matrix notation — salmoRodeo-package","text":"Usage package requires installed build tools, Gnu C/C++ Gnu Fortran Linux RTools Windows.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/salmoRodeo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A 1-layer ecological lake model in Petersen-Gujer matrix notation — salmoRodeo-package","text":"Justus Möller Thomas Petzoldt  thomas.petzoldt@tu-dresden.de","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_initval.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or change initial values of the model states. — set_initval","title":"Set or change initial values of the model states. — set_initval","text":"function updates initial state variables rodeo model object. performs check ensure provided initial values vector matches defined state variables model terms names.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_initval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or change initial values of the model states. — set_initval","text":"","code":"set_initval(model, init)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_initval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or change initial values of the model states. — set_initval","text":"model rodeo model object. init named numeric vector representing initial values model's state variables. names vector must match names model's state variables exactly.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_initval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or change initial values of the model states. — set_initval","text":"modified rodeo model object updated initial values.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or change parameter values in a model object. — set_pars","title":"Set or change parameter values in a model object. — set_pars","text":"function updates parameters model object. accepts named vector new parameters uses replace_values helper function merge existing default parameters, preserving values order.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or change parameter values in a model object. — set_pars","text":"","code":"set_pars(model, new_pars = NULL, default_pars = model$getPars())"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or change parameter values in a model object. — set_pars","text":"model model object getPars() setPars() methods (e.g., rodeo model object). new_pars named vector new parameter values set. names correspond parameters model. NULL, parameters changed beyond default_pars. default_pars optional named vector representing default parameters. provided, model$getPars() used base onto new_pars applied.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or change parameter values in a model object. — set_pars","text":"modified model object updated parameters.","code":""},{"path":[]},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars2.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or change parameter values in a model object. — set_pars2","title":"Set or change parameter values in a model object. — set_pars2","text":"function updates parameters model object. can provide new parameter values directly named arguments via ellipsis (...).","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or change parameter values in a model object. — set_pars2","text":"","code":"set_pars2(model, default_pars = model$getPars(), ...)"},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or change parameter values in a model object. — set_pars2","text":"model model object getPars() setPars() methods. default_pars optional named vector representing default parameters. provided, model$getPars() used. ... Named arguments representing new parameter values set. override existing values default_pars.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or change parameter values in a model object. — set_pars2","text":"modified model object updated parameters.","code":""},{"path":"https://tpetzoldt.github.io/salmoRodeo/reference/set_pars2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set or change parameter values in a model object. — set_pars2","text":"function works similar set_pars, name = value-pairs can given directly, without enclosing combine c().","code":""},{"path":[]}]
